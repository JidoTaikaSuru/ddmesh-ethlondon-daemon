const axios = require("axios");

const BASE_URL = "https://console.neon.tech/api/v2"
const API_KEY =  process.env.NEON_API_KEY

class NeonManagementApiClient {
    constructor(baseUrl, apiKey) {
        this.baseUrl = baseUrl
        this.headers = {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Authorization": `Bearer ${apiKey}`,
        }
    }


    async getFirstProjectId() {
        const res =  await axios.get(`${this.baseUrl}/projects`, {
            headers: this.headers,
        })
        console.log(res.data)

        return res.data.projects[0].id
    }
    
    async getFirstBranchId(projectId) {
        const res =  await axios.get(`${this.baseUrl}/projects/${projectId}/branches`, {
            headers: this.headers,
        })
        console.log(res.data)

        return res.data.branches[0].id
    }
    async getFirstDatabaseId(projectId, branchId) {
        const res =  await axios.get(`${this.baseUrl}/projects/${projectId}/branches/${branchId}/databases`, {
            headers: this.headers,
        })
        console.log(res)

        return res.databases[0].id
    }

    async createDatabase(dbName, dbPass, projectId, branchId){
        const res = await axios.post(`${this.baseUrl}/projects/${projectId}/branches/${branchId}/databases`, {
            database: {
                name: dbName,
                owner_name: "neon_superuser",
            }
        }, {headers: this.headers})
        console.log(res)
        return res
    }
    async deleteDatabase(dbId, projectId, branchId){
        const res = await axios.delete(`${this.baseUrl}/projects/${projectId}/branches/${branchId}/databases/${dbId}`, {
            headers: this.headers,
        })
        console.log(res)
        return res
    }


    //TODO
    async createProject(){}
    //TODO
    async createBranch(){}


    //https://supabase.com/docs/reference/api/create-a-project
    // Trust me on the parameters, tested in postman
    async createProject(projectName){
        const dbPass = this.generateRandomPassword(32)
        const res = await axios.post(`${this.baseUrl}/projects`, {
            name: projectName,
        }, {headers: this.headers})
        res.db_pass = dbPass
        return res
    }

    // YOU CANNOT CURRENTLY DELETE A PROJECT


    //Generated by ChatGPT
    generateRandomPassword(length) {
        const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=";
        let password = "";
        for (let i = 0, n = charset.length; i < length; ++i) {
            password += charset.charAt(Math.floor(Math.random() * n));
        }
        return password;
    }


}

const neon = new NeonManagementApiClient(BASE_URL, API_KEY)

async function main() {
    const projectId = await neon.getFirstProjectId()
    const branchId = await neon.getFirstBranchId(projectId)
    // const databaseId = await neon.getFirstDatabaseId(projectId, branchId)
    await neon.createDatabase("newdb", "newpass", projectId, branchId)
    await neon.deleteDatabase(databaseId, projectId, branchId)
}

main().catch(console.error);